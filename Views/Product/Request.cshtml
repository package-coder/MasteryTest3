@{
    ViewBag.Title = "title";
    Layout = "_Layout";
}
@model IEnumerable<UOM>

@Html.Partial("_NavbarBack")

<div class="flex-column container mw-primary h-100 overflow-hidden position-relative">

         <h3 class="my-4">Request Product</h3>
    <div class="overflow-auto" style="height: calc(100% - 180px)">
         <form id="form">
                      <div class="alert alert-dark mb-4">
                          This table is empty
                      </div>
                      <div class="border rounded rounded-5" style="width: 100%;">
                          <table class="table table-hover m-0">
                              <thead>
                              <tr>
                                  <th class="text-center" style="width: 8ch">Qty</th>
                                  <th class="auto text-center" style="width: 8ch">Unit</th>
                                  <th>Name</th>
                                  <th >Remarks</th>
                                  <th class="auto text-center vertical-align-center"></th>
                         
                              </tr>
                              </thead>
                              <tbody id="requestBody">
                              <tr class="table-input">
                                  <td>
                                      <input autofocus type="text" id="quantity"/>
                                  </td>
                                  <td>
                                      <input autofocus type="text" id="unit"/>
                                  </td>
                                  <td>
                                      <input autofocus class="text-start" type="text" id="name"/>
                                  </td>
                                  <td>
                                      <input autofocus class="text-start" type="text" id="remarks"/>
                                  </td>
                                  <td>
                                      <button type="submit" class="btn btn-primary" style="margin: 2px 2px 2px 3px;">Submit</button>
                                  </td>
                              </tr>
                              </tbody>
                          </table>
                         
                      </div>
                  </form>
    </div>
    <div class="d-flex align-items-center justify-content-between pt-4 pb-5 px-3 position-absolute" style="left: 0; right: 0; bottom: 0">
        <div>
            <button type="submit" class="btn border">Discard</button>
            <button type="submit" class="btn border">Save</button>
        </div>
        <button type="submit" class="btn bg-primary">Send Request</button>
    </div>
    
    @* <form id="order-form" class="w-sm-100 mt-5" style="width: 40%;">
        <table class="w-100 mb-5">
            <tr>
                <td class="text-secondary">Name <span class="required">*</span></td>
                <td class="auto">
                    <input class="form-control" type="text" name="name" id="name"/>
                </td>
            </tr>
            <tr>
                <td class="text-secondary">Quantity <span class="required">*</span></td>
                <td class="auto">
                    <div class="form-group end">
                        <input type="number" class="form-control" name="quantity" id="quantity" step="0.01" />
                    </div>
                </td>
            </tr>
            <tr>
                <td class="text-secondary">Unit <span class="required">*</span></td>
                <td class="auto">
                    <div class="form-group">
                        <select class="form-select" type="text" name="uomId" id="uomId">
                            <option value="" selected disabled>choose</option>
                            @foreach (var uom in Model)
                            {
                                <option value="@uom.Id" class="bg-dark text-secondary">@uom.name (@uom.unit.ToUpper())</option>
                            }
                        </select>
                    </div>
                </td>
            </tr>
            <tr>
                <td class="text-secondary" style="vertical-align: baseline">Remarks</td>
                <td class="auto" style="height: 80px; vertical-align: baseline">
                    <textarea class="form-control" style="height: 100% !important;" name="remark" id="remark" rows="3"></textarea>
                </td>
            </tr>
        </table>

        <button type="submit" class="btn btn-primary">Submit</button>
    </form> *@
</div>

<script>
    const requests = []
    const requestElement = document.getElementById('requestBody');
    const alertElement = document.querySelector('#form .alert');

   function addRequestItem(value) {
        if (requests.length === 0) {
            alertElement.classList.add('d-none');
        }
        
        const rowElement = document.createElement('tr');
        rowElement.id = requests.length.toString();
        
        const quantityElement = rowElement.appendChild(document.createElement('td'))
        quantityElement.textContent = value.quantity;
        quantityElement.classList.add('text-center');
        
        const unitElement = rowElement.appendChild(document.createElement('td'))
        unitElement.textContent = value.unit;   
        unitElement.classList.add('text-center');
                
        rowElement.appendChild(document.createElement('td')).textContent = value.name
        rowElement.appendChild(document.createElement('td')).textContent = value.remarks
        
        const actionElement = rowElement.appendChild(document.createElement('td'))
        actionElement.classList.add('py-0')
        actionElement.append(createRemoveItemButton(() => requestElement.removeChild(rowElement)))
        
        requestElement.append(rowElement)
        requests.push(value);
   }
    

   function createRemoveItemButton(handleClick) {
       const element = document.createElement('button');
       element.classList.add('btn', 'd-flex', 'align-items-center');
       element.type = 'button';
       element.addEventListener('click', handleClick)
       
       const child = element.appendChild(document.createElement('span'))
       child.textContent = "delete";
       child.classList.add('material-symbols-outlined', 'h-100');
              
       return element;
   }
   


    $("#form").submit((e) => {
        e.preventDefault();
        const fields = ['quantity', 'unit', 'name', 'remarks']
        const form = {}
        
        fields.forEach((field) => {
            
            const fieldElement = document.getElementById(field);
            Object.assign(form, { [field]: fieldElement.value })
            
            fieldElement.value = null;
        })
                
        addRequestItem(form)
        
        document.getElementById(fields[0]).focus();
    });
    
   
    $("#order-form").submit((e) => {
        e.preventDefault();

        ValidateRequestForm()

        if ($("#order-form").valid()) { 
            var formData = new FormData();
            formData.append("product", null);
            formData.append("name", $("#name").val());
            formData.append("quantity", $("#quantity").val());
            formData.append("remark", $("#remark").val());
            formData.append("uom.Id", $("#uomId").val())

            $.ajax({
                type: "POST",
                url: "@Url.Action("Request", "Product")",
                data: formData,
                contentType: false,
                processData: false,
                dataType: false,
                success: () => {
                    Swal.fire({
                        title: "Product has been added!",
                        text: "Item added to cart",
                        icon: "success",
                        background: '#151515',
                        showCancelButton: false,
                        allowOutsideClick: false
                    }).then((result) => {
                        if (result.isConfirmed) {
                            window.location.reload();
                        }
                    });
                },
                error: () => {
                    Swal.fire({
                        title: "Something went wrong!",
                        text: "Your item has not been added",
                        icon: "error",
                        background: '#151515',
                        showCancelButton: false,
                        allowOutsideClick: false
                    });
                }
            });
        }
    });

</script>