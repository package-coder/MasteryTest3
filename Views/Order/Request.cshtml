@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@{
    ViewBag.Title = "Request Product";
    Layout = "_Layout";
    int? userId = HttpContextAccessor.HttpContext?.Session.GetInt32("userId");

}

@Html.Partial("_NavbarBack")

<div class="flex-column container mw-primary h-100 overflow-hidden position-relative">

    <div class="d-flex flex-row align-items-center justify-content-between mb-4">
        <h3 class="my-4">Request Product</h3>
        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#browseProductModal">
            Choose Products
        </button>
    </div>
    @if (userId == null)
    {
        <div class="alert alert-dark mb-4" role="alert">
            Select user first!
        </div>
    }
    else
    {
        <div class="overflow-auto" style="height: calc(100% - 180px)">
            <form id="form">
                <div class="alert alert-dark mb-4">
                    This table is empty
                </div>
                <div class="border rounded rounded-5" style="width: 100%;">
                    <table class="table table-hover m-0">
                        <thead>
                            <tr>
                                <th class="text-center" style="width: 8ch">Qty</th>
                                <th class="auto text-center" style="width: 8ch">Unit</th>
                                <th>Name</th>
                                <th>Remarks</th>
                                <th class="auto text-center vertical-align-center"></th>

                            </tr>
                        </thead>
                        <tbody id="request-list">
                        <tr class="table-input">
                            <td>
                                <input autofocus type="text" id="quantity" />
                            </td>
                            <td>
                                <input autofocus type="text" id="unit" />
                            </td>
                            <td>
                                <input autofocus class="text-start" type="text" id="name" />
                            </td>
                            <td>
                                <input autofocus class="text-start" type="text" id="remarks" />
                            </td>
                            <td>
                                <button type="submit" class="btn btn-primary"
                                        style="margin: 2px 2px 2px 3px;">Submit</button>
                            </td>
                        </tr>
                        </tbody>
                    </table>

                </div>
            </form>
        </div>
        <footer class="d-flex align-items-center justify-content-between pt-4 pb-5 px-3 position-absolute"
            style="left: 0; right: 0; bottom: 0">
            <div id="action-buttons">
                <button type="reset" class="btn border">Discard</button>
                <button id="save-request" type="submit" class="btn border" disabled onclick="saveOrderRequest('DRAFT')">Save</button>
            </div>
            <button id="send-request" type="submit" class="btn bg-primary" disabled onclick="saveOrderRequest('FOR_APPROVAL')">Send Request</button>
        </footer>

    }
    
    <div class="modal fade" id="browseProductModal" tabindex="-1" aria-labelledby="browseProductModal" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="browseProductModal">Browse Product</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" style="filter: invert(1)"></button>
                </div>
                <div class="modal-body">
                    <form id="modal-request-form">
                        <div class="form-group mb-2">
                            <select id="name2" class="form-select">
                                <option selected disabled>--select products--</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <div class="form-item mb-2">
                                <label>Qunatity</label>
                                <input class="form-control quantity" id="quantity2" name="quantity" />
                            </div>
                            <div class="form-item mb-2">
                                <label>Unit</label>
                                <input class="form-control" id="unit2" />
                            </div>
                            <div class="form-item mb-2">
                                <label>Remarks</label>
                                <input class="form-control" id="remark2" />
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn border" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary" form="modal-request-form" value="submit">Add Product</button>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    // let order = null;
    // let requests = []
    // const requestElement = document.getElementById('request-list');
    // const alertElement = document.querySelector('#form .alert');
    // const fields = ['quantity', 'unit', 'name', 'remarks']
    //
    // function addRequestItem(value) {
    //     if (requests.length === 0) {
    //         alertElement.classList.add('d-none');
    //     }
    //     const index = requests.length;
    //     const rowElement = document.createElement('tr');
    //     rowElement.id = index.toString();
    //
    //     const quantityElement = rowElement.appendChild(document.createElement('td'))
    //     quantityElement.textContent = value.quantity;
    //     quantityElement.classList.add('text-center');
    //
    //     const unitElement = rowElement.appendChild(document.createElement('td'))
    //     unitElement.textContent = value.unit;
    //     unitElement.classList.add('text-center');
    //
    //     rowElement.appendChild(document.createElement('td')).textContent = value.name
    //     rowElement.appendChild(document.createElement('td')).textContent = value.remarks
    //
    //     const actionElement = rowElement.appendChild(document.createElement('td'))
    //     actionElement.classList.add('py-0')
    //    
    //     actionElement.append(
    //         createRemoveItemButton(() => {
    //             setDisabledButton();
    //             requests.splice(index, 1);
    //             requestElement.removeChild(rowElement)
    //            
    //             if (requests.length === 0) {
    //                 alertElement.classList.remove('d-none');
    //             }
    //         })
    //     )
    //     requestElement.append(rowElement)
    //     requests.push(value);
    // }
    //
    //
    // function createRemoveItemButton(handleClick) {
    //     const element = document.createElement('button');
    //     element.classList.add('btn', 'd-flex', 'align-items-center');
    //     element.type = 'button';
    //     element.addEventListener('click', handleClick)
    //
    //     const child = element.appendChild(document.createElement('span'))
    //     child.textContent = "delete";
    //     child.classList.add('material-symbols-outlined', 'h-100');
    //
    //     return element;
    // }
    //
    // function saveRequest(status = "DRAFT") {
    //         const data = { status, Id: order?.Id, orderItems: requests }
    //        
    //         $.ajax({
    //             type: "POST",
    //             url: "@Url.Action("Request", "Product")",
    //             data: JSON.stringify(data),
    //             contentType: "application/json",
    //             processData: false,
    //             dataType: false,
    //             success: () => {
    //                 Swal.fire({
    //                     title: "Submitted Successfully!",
    //                     text: "Request has been submitted",
    //                     icon: "success",
    //                     background: '#151515',
    //                     showCancelButton: false,
    //                     allowOutsideClick: false
    //                 }).then((result) => {
    //                     if (result.isConfirmed) {
    //                         window.location.replace('/');
    //                     }
    //                 });
    //             },
    //             error: () => {
    //                 Swal.fire({
    //                     title: "Something went wrong!",
    //                     text: "Your request has not been submitted",
    //                     icon: "error",
    //                     background: '#151515',
    //                     showCancelButton: false,
    //                     allowOutsideClick: false
    //                 });
    //             }
    //         });
    //     }
    //
    //
    // document.addEventListener('DOMContentLoaded', async () => {        
    //     const response = await fetch('@Url.Action("DraftOrder", "Product")', { method: "GET" });
    //     const data = await response.json();
    //    
    //     order = data;
    //     data?.orderItems?.forEach(item => addRequestItem({ ...item, unit: item.uom.unit }))
    // })

    $.ajax({
            type: "GET",
            url: "@Url.Action("GetAllProducts", "Product")",
            success: (data) => { 
                data.forEach((item) => {
                    var option = document.createElement("option");
                    var selectElement = document.getElementById("name2");
                    option.text = item.name,
                    option.value = item.id
                    selectElement.append(option);
                });  
            }
    })
</script>
<script src="../Views/Order/Request.cshtml.js" type="module"></script>
@* <script src="~/js/validation.js"></script> *@
<script src="~/js/submitRequestHandler.js"> </script>