@inject IHttpContextAccessor HttpContextAccessor
@{
    Layout = "_Layout";
    ViewData["Title"] = "Process Order Request";
    int? userId = HttpContextAccessor.HttpContext?.Session.GetInt32("userId");
}

@using MasteryTest3.Data
@model Order;

<div class="flex-column container mw-primary h-100 overflow-hidden position-relative">

    <div class="d-flex flex-row align-items-center justify-content-between mt-5 mb-4">
        <h3 class="my-2">@(Model.status == OrderStatus.DRAFT.ToString() ? "Process" : "Approval of") Order Request</h3>
    </div>
    
    <div id="display-attachment" class="p-2 align-items-center d-flex gap-2 rounded rounded-5 mb-3 @((!String.IsNullOrEmpty(Model.attachment) ? "" : "d-none"))" style="background-color: rgba(255,255,255, 0.05); width: max-content">
        <span style="font-size:14px">Attached PDF</span>
        <div class="pdf-action-btn d-flex gap-2">
            @if (!String.IsNullOrEmpty(Model.attachment))
            {
                <a id="btn-download-attachment" target="_blank" class="btn border" asp-controller="order" asp-action="DownloadOrderAttachment" asp-route-id="@Model.Id" id="btn-download-attachment">View</a>
            }
        </div>
    </div>

    <div class="overflow-auto" style="height: calc(100% - 180px)">
            <div class="border rounded rounded-5" style="width: 100%;">
                <table id="table-request" class="table table-hover m-0">
                    <thead>
                    <tr>
                        <th class="auto"></th>
                        <th>Name</th>
                        <th class="text-center" style="width: 8ch">Qty</th>
                        <th class="auto text-center" style="width: 8ch">Unit</th>
                        <th>Remarks</th>
                    </tr>
                    </thead>
                    <tbody id="request-list">
                    @for (var index = 0; index < Model.orderItems.Count; index++)
                    {
                        <tr id="@Model.orderItems[index].Id">
                            <td class="auto text-center text-secondary">@(index+1)</td>
                            <td>@Model.orderItems[index].name</td>
                            <td class="text-center">@Model.orderItems[index].quantity</td>
                            <td class="text-center">@Model.orderItems[index].unit</td>
                            <td>@Model.orderItems[index].remark</td>
                        </tr>
                    }
                    </tbody>
                </table>

            </div>
    </div>
    <footer class="d-flex align-items-center justify-content-between pt-4 pb-5 px-3 position-absolute"
            style="left: 0; right: 0; bottom: 0">
        <div id="action-buttons">
            <button id="cancel-request" type="submit" class="btn border">Cancel</button>
        </div>
        <button id="submit-request" type="submit" class="btn bg-primary">Submit Request</button>
    </footer>
</div>

<script>
    
    document.getElementById('cancel-request').addEventListener('click', () => {
        Swal.fire({
            title: "Do you want to save your request?",
            background: '#151515',
            showCancelButton: true,
            confirmButtonText: "Yes",
            cancelButtonText: "No",
            allowOutsideClick: false
        }).then((result) => {
            if (result.isConfirmed) {
                fetch(`/order/request`, {
                    method: "POST",
                    body: JSON.stringify({ Id: '@Model.Id', status: '@OrderStatus.DRAFT', orderItems: [], attachment: '@Html.Raw(Model.attachment)' }),
                    headers: new Headers({ 'content-type': 'application/json' })
                }).then(() => { window.location.replace("/order?status=DRAFT&role=REQUESTER") });
            } else { 
                fetch('/order/DeleteOrderRequest/@Model.Id',
                    {
                        method: "DELETE"

                    }).then(() => { window.location.replace("/order?status=DRAFT&role=REQUESTER") });

            }
        });
    });
    document.getElementById('submit-request').addEventListener('click', () => {
        Swal.fire({
            title: "Confirmation",
            text: "Type \"Confirm\" to submit the request",
            background: '#151515',
            allowOutsideClick: false,
            showCancelButton: true,
            input: "text",
            inputAttributes: {
                autocapitalize: "off"
            },
        }).then(result => {
            if (result.value.toUpperCase().trim() === "CONFIRM") {
                return fetch(`/order/save`, {
                    method: "POST",
                    body: JSON.stringify({ Id: '@Model.Id', status: '@OrderStatus.FOR_APPROVAL', orderItems: [], attachment: '@Html.Raw(Model.attachment)' }),
                    headers: new Headers({ 'content-type': 'application/json' })
                }).then(response => Swal.fire({
                    title: "Success!",
                    text: "Order request has been processed",
                    icon: "success",
                    background: '#151515',
                    showCancelButton: false,
                    allowOutsideClick: false
                }).then(() => window.location.replace(response.url)))
            }
            })
    });

</script>